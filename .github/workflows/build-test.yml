name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Debug

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    timeout-minutes: 30
    strategy:
      matrix:
        llvm: ['9', '10', '11']
        config:
        - {cc: gcc-9, cxx: g++-9}
        - {cc: gcc-10, cxx: g++-10}

    steps:
    - name: Install Dependencies
      if: matrix.llvm <= 9
      run: sudo apt-get install -y libedit-dev

    - name: Install LLVM and Clang
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh ${{matrix.llvm}}

    - name: Checkout YuLang
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      shell: bash
      env:
        CC: ${{matrix.config.cc}}
        CXX: ${{matrix.config.cxx}}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make LLVM_HOME=`llvm-config-${{matrix.llvm}} --bindir` LD="clang-${{matrix.llvm}}"

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: $GITHUB_WORKSPACE/utils/run_test.sh ${{runner.workspace}}/build
